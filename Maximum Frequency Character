Maximum Frequency Character
Given a string s containing lowercase alphabets, return the character with the highest occurrence in s.

If there are multiple such characters, then return the lexicographically smallest one of them.

Input Format
The only line of the input contains the string s.

Output Format
Print the maximal occurring character in the string s. If there are multiple, print the lexicographically minimum one.

Example 1
Input

abbbc
Output

b
Explanation

Here, a occurs 1 time, c occurs 1 time, and b occurs 3 times. Hence our answer for this is b.

Example 2
Input

aabbbccc
Output

b
Constraints
1 < s.length() < 100

Topics
Strings
Companies
Morgan Stanley


import java.util.*;

public class Main {
    
    static char MaximumFrequencyChar(String s) 
    {
        int l = s.length();
        int maximumFrequency = 0;
        char letter = 'a';
        
        for(int i=0; i<l; i=i+1) // fixed letter 
        {
            char currentCharacter = s.charAt(i);
            int frequency = 0;
            
            for(int j=0; j<l; j=j+1) // helping to count frequency of each letter 
            {
                if(currentCharacter == s.charAt(j))
                {
                    frequency = frequency + 1;
                }
            }
            
            if(frequency > maximumFrequency)
            {
                maximumFrequency = frequency;
                letter = currentCharacter;
            }
            else if(frequency == maximumFrequency) // maximumFrequency of two letters are same, choose smallest one
            {
                if(currentCharacter < letter)
                {
                    letter = currentCharacter;
                }
            }
        }
        
        return letter;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        System.out.println(MaximumFrequencyChar(s));
    }
}

